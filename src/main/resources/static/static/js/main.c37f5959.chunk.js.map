{"version":3,"sources":["reportWebVitals.js","Logo.svg","Blue6API.tsx","Blue6.tsx","Blue7API.tsx","Blue7.tsx","Delete.svg","DisplayReportTable.tsx","App.tsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getBlue6s","a","console","log","axios","get","response","data","_embedded","blue6s","message","Error","sendBlue6s","blue6SentFormData","post","deleteBlue6s","blue6Id","delete","Blue6","useState","reportingDateInputText","reportingDateSetInputText","callSignInputText","callSignSetInputText","spInputText","spSetInputText","rpInputText","rpSetInputText","cpInputText","cpSetInputText","etaInputText","etaSetInputText","sensitiveInputText","sensitiveSetInputText","narInputText","narSetInputText","contactInputText","contactSetInputText","className","value","onChange","event","target","type","onClick","e","reportingDateInput","callSignInput","spDateInput","rpInput","locInput","etaInput","siInput","narInput","pocInput","window","location","reload","getBlue7s","blue7s","sendBlue7s","blue7SentFormData","deleteBlue7s","blue7Id","Blue7","checkOutReportingDateInputText","checkOutReportingDateSetInputText","checkOutCallSignInputText","checkOutCallSignSetInputText","checkOutRpDateInputText","checkOutRpDateSetInputText","checkOutLocInputText","checkOutLocSetInputText","accidentInputText","accidentSetInputText","checkOutEtaInputText","checkOutEtaSetInputText","checkOutSiInputText","checkOutSiSetInputText","checkOutReportingDateInput","checkOutCallSignInput","checkOutRpDateInput","checkOutLocInput","accidentInput","checkOutEtaInput","checkOutSiInput","DisplayReportTable","displayReportBlue6","setDisplayReportBlue6","displayReportBlue7","setDisplayReportBlue7","useEffect","catch","error","map","blueSixData","id","src","Delete","blueSevenData","App","reportSelection","setReportSelection","Logo","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c37f5959.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/Logo.317fbffc.svg\";","import axios from 'axios';\nexport const getBlue6s = async(): Promise<Blue6Data[]> => {\n    try{console.log(\"did I make it\")\n        const response = await axios.get(\"/api/blue6s\")\n        console.log(response.data._embedded.blue6s)\n         return response.data._embedded.blue6s;\n\n    } catch (e) {\n        console.log(e.message)\n        throw new Error(e.message)\n    }\n}\n\n//Send data to db\n\nexport const sendBlue6s = async(blue6SentFormData: Blue6Data) => {\n    try {\n        console.log(\"did I make it\")\n        await axios.post(\"/api/blue6s\", blue6SentFormData)\n    } catch (e) {\n        console.log(e.message)\n        throw new Error(e.message)\n    }\n}\nexport const deleteBlue6s = async(blue6Id:number) => {\n    try{\n        console.log(\"was blue6 deleted\")\n        await axios.delete(`/api/blue6s/${blue6Id}`)\n\n    } catch(e){\n        console.log(e.message)\n        throw new Error(e.message)\n    }\n}\nexport interface Blue6Data {\n\n    id?: number;\n    reportingDateInput : string;\n    callSignInput : string;\n    spDateInput : string;\n    rpInput : string;\n    locInput : string;\n    etaInput : string;\n    siInput : string;\n    narInput : string;\n    pocInput : string;\n}","import React, {useState} from \"react\";\nimport './index.css'\nimport './App.css'\nimport {sendBlue6s} from \"./Blue6API\";\n\nexport const Blue6 = () => {\n    const [reportingDateInputText, reportingDateSetInputText] = useState<string>(\"\")\n    const [callSignInputText, callSignSetInputText] = useState<string>(\"\")\n    const [spInputText, spSetInputText] = useState<string>(\"\")\n    const [rpInputText, rpSetInputText] = useState<string>(\"\")\n    const [cpInputText, cpSetInputText] = useState<string>(\"\")\n    const [etaInputText, etaSetInputText] = useState<string>(\"\")\n    const [sensitiveInputText, sensitiveSetInputText] = useState<string>(\"\")\n    const [narInputText, narSetInputText] = useState<string>(\"\")\n    const [contactInputText, contactSetInputText] = useState<string>(\"\")\n\n\n\n    return (\n    <form>\n        <h1>\n            Complete Your Blue 6 Below:\n        </h1>\n        <div>\n            <label className=\"label-row\">\n                Reporting Date Time Group:\n                <input value={reportingDateInputText} onChange={(event) => {\n                    reportingDateSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div>\n            <label className=\"label-row\">\n                Unit & Call Sign:\n                <input value={callSignInputText} onChange={(event) => {\n                    callSignSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div>\n            <label className=\"label-row\">\n                SP Date Time Group:\n                <input value={spInputText} onChange={(event) => {\n                    spSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n\n        <div>\n            <label className=\"label-row\">\n                Estimated RP Date Time Group:\n                <input value={rpInputText} onChange={(event) => {\n                    rpSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div>\n            <label className=\"label-row\">\n                Command Post Location:\n                <input value={cpInputText} onChange={(event) => {\n                    cpSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div>\n            <label className=\"label-row\">\n                ETA to Continue Operations:\n                <input value={etaInputText} onChange={(event) => {\n                    etaSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div>\n            <label className=\"label-row\">\n                Sensitive Items Status:\n                <input value={sensitiveInputText} onChange={(event) => {\n                    sensitiveSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div>\n            <label className=\"label-row\">\n                One Sentence Narrative:\n                <input value={narInputText} onChange={(event) => {\n                    narSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div>\n            <label className=\"label-row\">\n                Contact Name and Phone #:\n                <input value={contactInputText} onChange={(event) => {\n                    contactSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div className=\"checkButton-styling\">\n            <button type=\"submit\" onClick={(e)=> {\n                const Blue6formData = {\n                    reportingDateInput : reportingDateInputText,\n                    callSignInput : callSignInputText,\n                    spDateInput : spInputText,\n                    rpInput : rpInputText,\n                    locInput : cpInputText,\n                    etaInput : etaInputText,\n                    siInput : sensitiveInputText,\n                    narInput : narInputText,\n                    pocInput: contactInputText\n                }\n                sendBlue6s(Blue6formData)\n                window.location.reload()\n            }}>\n                submit\n            </button>\n\n        </div>\n    </form>\n    )}","import axios from 'axios';\nexport const getBlue7s = async(): Promise<Blue7Data[]> => {\n    try{console.log(\"did I make it\")\n        const response = await axios.get(\"/api/blue7s\")\n        console.log(response.data._embedded.blue7s)\n        return response.data._embedded.blue7s;\n\n    } catch (e) {\n        console.log(e.message)\n        throw new Error(e.message)\n    }\n}\n\nexport const sendBlue7s = async(blue7SentFormData: Blue7Data) => {\n    try {\n        console.log(\"did I make it\")\n        await axios.post(\"/api/blue7s\", blue7SentFormData)\n    } catch (e) {\n        console.log(e.message)\n        throw new Error(e.message)\n    }\n}\n\nexport const deleteBlue7s = async(blue7Id:number) => {\n    try{\n        console.log(\"was blue7 deleted\")\n        await axios.delete(`/api/blue7s/${blue7Id}`)\n\n    } catch(e){\n        console.log(e.message)\n        throw new Error(e.message)\n    }\n}\n\nexport interface Blue7Data {\n    id?: number;\n    checkOutReportingDateInput: string;\n    checkOutCallSignInput: string;\n    checkOutRpDateInput: string;\n    checkOutLocInput: string;\n    accidentInput: string;\n    checkOutEtaInput: string;\n    checkOutSiInput: string;\n\n}","import React, {useState} from \"react\";\nimport './index.css'\nimport './App.css'\nimport {sendBlue7s} from \"./Blue7API\";\n\nexport const Blue7 = () => {\n    const[checkOutReportingDateInputText, checkOutReportingDateSetInputText] = useState<string>(\"\")\n    const[checkOutCallSignInputText, checkOutCallSignSetInputText] = useState<string>(\"\")\n    const[checkOutRpDateInputText, checkOutRpDateSetInputText] = useState<string>(\"\")\n    const[checkOutLocInputText, checkOutLocSetInputText] = useState<string>(\"\")\n    const[accidentInputText, accidentSetInputText] = useState<string>(\"\")\n    const[checkOutEtaInputText, checkOutEtaSetInputText] = useState<string>(\"\")\n    const[checkOutSiInputText, checkOutSiSetInputText] = useState<string>(\"\")\n\n    return (\n        <form>\n            <h1 className=\"body\">\n                Complete Your Blue 7 Below:\n            </h1>\n        <div>\n            <label className=\"label-row\">\n                Reporting Date Time Group:\n                <input value={checkOutReportingDateInputText} onChange={\n                    (event) =>{checkOutReportingDateSetInputText(event.target.value)}}/>\n            </label>\n            <label className=\"label-row\">\n                Unit & Call Sign:\n                <input value={checkOutCallSignInputText} onChange={\n                    (event) =>{checkOutCallSignSetInputText(event.target.value)}}/>\n            </label>\n            <label className=\"label-row\">\n                RP Date Time Group:\n                <input value={checkOutRpDateInputText} onChange={\n                    (event) =>{checkOutRpDateSetInputText(event.target.value)}}/>\n            </label>\n            <label className=\"label-row\">\n                Command Post Location:\n                <input value={checkOutLocInputText} onChange={\n                    (event) =>{checkOutLocSetInputText(event.target.value)}}/>\n            </label>\n            <label className=\"label-row\">\n                Accidents or SIGACTs:\n                <input value={accidentInputText} onChange={\n                    (event) =>{accidentSetInputText(event.target.value)}}/>\n            </label>\n            <label className=\"label-row\">\n                ETA to Continue Operations:\n                <input value={checkOutEtaInputText} onChange={\n                    (event) =>{checkOutEtaSetInputText(event.target.value)}}/>\n            </label>\n            <label className=\"label-row\">\n                Sensitive Items Status:\n                <input value={checkOutSiInputText} onChange={\n                    (event) =>{checkOutSiSetInputText(event.target.value)}}/>\n            </label>\n        </div>\n        <div className=\"checkButton-styling\">\n            <button type=\"submit\" onClick={(e) => {\n                const Blue7formData = {\n                    checkOutReportingDateInput: checkOutReportingDateInputText,\n                    checkOutCallSignInput: checkOutCallSignInputText,\n                    checkOutRpDateInput: checkOutRpDateInputText,\n                    checkOutLocInput: checkOutLocInputText,\n                    accidentInput: accidentInputText,\n                    checkOutEtaInput: checkOutEtaInputText,\n                    checkOutSiInput: checkOutSiInputText,\n                }\n                sendBlue7s(Blue7formData)\n                window.location.reload()\n            }\n            }>submit</button>\n        </div>\n    </form>\n\n    )}","export default __webpack_public_path__ + \"static/media/Delete.16ca6d6c.svg\";","import React, {useEffect, useState} from \"react\";\nimport {Blue6Data, deleteBlue6s, getBlue6s} from \"./Blue6API\";\nimport './DisplayReportTable.css';\nimport {Blue7Data, deleteBlue7s, getBlue7s, sendBlue7s} from \"./Blue7API\";\nimport Delete from \"./Delete.svg\"\nimport {Blue7} from \"./Blue7\";\n\nexport const DisplayReportTable = () => {\n\nconst [displayReportBlue6, setDisplayReportBlue6] = useState<Blue6Data[]>([]);\nconst[displayReportBlue7, setDisplayReportBlue7] = useState<Blue7Data[]>([]);\n\n\nuseEffect( () => {\n    getBlue6s()\n        .then((data) => {\n            setDisplayReportBlue6(data);\n        })\n        .catch(() => {\n            console.error('blue6 data transfer didnt work')\n        })\n},[]);\n\nuseEffect(() => {\n    getBlue7s()\n        .then((data) => {\n            setDisplayReportBlue7(data);\n            console.log(displayReportBlue7)\n        })\n        .catch(() => {\n            console.error('blue7 data transfer didnt work')\n        })\n}, []);\n\nreturn (\n<div>\n<h2>Active Training</h2>\n<div className='table-container'>\n<table>\n    <div className= 'overflow'>\n    <tr>\n        <th>Reporting Date</th>\n        <th>Unit & Call Sign</th>\n        <th>SP Date Time Group</th>\n        <th>Estimated RP Date Time Group</th>\n        <th>Command Post Location</th>\n        <th>ETA to Continue Operations</th>\n        <th>Sensitive Item Status</th>\n        <th>One Sentence Narrative</th>\n        <th>Contact Name and Phone #</th>\n    </tr>\n        {displayReportBlue6.map((blueSixData) => {\n            console.log('Here is my current Blue6 id ', blueSixData.id)\n            return (\n                <tr>\n                    <td>\n                        {blueSixData.reportingDateInput}\n                    </td>\n                    <td>\n                        {blueSixData.callSignInput}\n                    </td>\n                    <td>\n                        {blueSixData.spDateInput}\n                    </td>\n                    <td>\n                        {blueSixData.rpInput}\n                    </td>\n                    <td>\n                        {blueSixData.locInput}\n                    </td>\n                    <td>\n                        {blueSixData.etaInput}\n                    </td>\n                    <td>\n                        {blueSixData.siInput}\n                    </td>\n                    <td>\n                        {blueSixData.narInput}\n                    </td>\n                    <td>\n                        {blueSixData.pocInput}\n                    </td>\n                    <td>\n                        <button  type = \"submit\" onClick={(e) => {\n\n                            deleteBlue6s(blueSixData.id!)\n                            window.location.reload()\n                        }}>\n                            <img src={Delete}></img>\n                        </button>\n                    </td>\n\n                </tr>\n            )\n        })  }\n\n    </div>\n\n</table>\n    <h2>Completed Training</h2>\n\n    <table>\n        <div className= 'overflow'>\n            <tr>\n                <th>Reporting Date Time Group</th>\n                <th>Unit & Call Sign</th>\n                <th>RP Date Time Group</th>\n                <th>Command Post Location</th>\n                <th>Accidents or SIGACTs</th>\n                <th>ETA to Continue Operations</th>\n                <th>Sensitive Item Status</th>\n            </tr>\n            {displayReportBlue7.map((blueSevenData) => {\n                console.log('Here is my Blue7 data ', blueSevenData)\n                console.log('Here is my current Blue7 id ', blueSevenData.id)\n                return (\n                    <tr>\n                        <td>\n                            {blueSevenData.checkOutReportingDateInput}\n                        </td>\n                        <td>\n                            {blueSevenData.checkOutCallSignInput}\n                        </td>\n                        <td>\n                            {blueSevenData.checkOutRpDateInput}\n                        </td>\n                        <td>\n                            {blueSevenData.checkOutLocInput}\n                        </td>\n                        <td>\n                            {blueSevenData.accidentInput}\n                        </td>\n                        <td>\n                            {blueSevenData.checkOutEtaInput}\n                        </td>\n                        <td>\n                            {blueSevenData.checkOutSiInput}\n                        </td>\n                        <td>\n                            <button  type = \"submit\" onClick={(e) => {\n\n                                deleteBlue7s(blueSevenData.id!)\n                                window.location.reload()\n                            }}>\n                                <img src={Delete}></img>\n                            </button>\n                        </td>\n\n                    </tr>\n                )\n            })}\n\n        </div>\n\n    </table>\n\n\n</div>\n<div className= \"tableContent\">\n\n</div>\n</div>)\n\n}\n\n\n\n","// @ts-ignore\nimport React, {useState} from 'react';\nimport Logo from \"./Logo.svg\";\nimport './index.css'\nimport './App.css'\nimport {Blue6} from \"./Blue6\";\nimport {Blue7} from \"./Blue7\";\nimport {DisplayReportTable} from \"./DisplayReportTable\";\n\n\nexport const App = () => {\n\n//Hook for Blue6/Blue7 Input Selection\n    const [reportSelection, setReportSelection] = useState<number>(0);\n\n\n    return (\n\n        <div className=\"background-container\">\n            <header>\n                <h1 className=\"body\">\n                    Lancer Brigade Operations Center\n                </h1>\n            </header>\n            <img src={Logo} className=\"App-logo\" alt=\"logo\"/>\n\n            <div className=\"form-container\">\n                {reportSelection === 1 && <Blue6/>}\n                {reportSelection === 2 && <Blue7/>}\n\n\n                {/*{reportSelection === 1 ? <Blue6/> :reportSelection ===2 ? <Blue7/> : null}*/}\n                {/*<>*/}\n                {/*    <button onClick={() =>setReportSelection(1)}>Initiate Training Event w/ Blue 6</button>*/}\n                {/*    <button onClick={() => setReportSelection(2)}>Close-Out Training Event w/ Blue 7</button>*/}\n                {/* </>*/}\n                {/*<button onClick={() => setReportSelection(0)}>Main Menu</button>*/}\n\n            </div>\n\n            <div className=\"form-container\">{reportSelection === 0 ?\n                <>\n                    <button onClick={() => setReportSelection(1)}>Initiate Training Event w/ Blue 6</button>\n                    <button onClick={() => setReportSelection(2)}>Close-Out Training Event w/ Blue 7</button>\n                </>\n                :\n                <button onClick={() => setReportSelection(0)} className=\"cancel-button\">cancel</button>}\n            </div>\n\n            {reportSelection === 0 && (\n                <div className=\"display-table\">\n                    <DisplayReportTable/>\n                </div>\n            )\n            }\n\n\n        </div>\n\n\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}