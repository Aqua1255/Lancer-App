{"version":3,"sources":["reportWebVitals.js","Logo.svg","Blue6.tsx","Blue7.tsx","App.tsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Blue6","useState","reportingDateInputText","reportingDateSetInputText","callSignInputText","callSignSetInputText","spInputText","spSetInputText","rpInputText","rpSetInputText","cpInputText","cpSetInputText","etaInputText","etaSetInputText","sensitiveInputText","sensitiveSetInputText","narInputText","narSetInputText","contactInputText","contactSetInputText","className","value","onChange","event","target","type","onClick","alert","Blue7","checkOutReportingDateInputText","checkOutReportingDateSetInputText","checkOutCallSignInputText","checkOutCallSignSetInputText","checkOutRpDateInputText","checkOutRpDateSetInputText","checkOutLocInputText","checkOutLocSetInputText","accidentInputText","accidentSetInputText","checkOutEtaInputText","checkOutEtaSetInputText","checkOutSiInputText","checkOutSiSetInputText","App","reportSelection","setReportSelection","src","Logo","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5060127a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/Logo.317fbffc.svg\";","import React, {useState} from \"react\";\nimport './index.css'\nimport './App.css'\n\nexport const Blue6 = () => {\n    const [reportingDateInputText, reportingDateSetInputText] = useState<string>(\"\")\n    const [callSignInputText, callSignSetInputText] = useState<string>(\"\")\n    const [spInputText, spSetInputText] = useState<string>(\"\")\n    const [rpInputText, rpSetInputText] = useState<string>(\"\")\n    const [cpInputText, cpSetInputText] = useState<string>(\"\")\n    const [etaInputText, etaSetInputText] = useState<string>(\"\")\n    const [sensitiveInputText, sensitiveSetInputText] = useState<string>(\"\")\n    const [narInputText, narSetInputText] = useState<string>(\"\")\n    const [contactInputText, contactSetInputText] = useState<string>(\"\")\n\n    return (\n    <form>\n        <h1 className=\"body\">\n            Complete Your Blue 6 Below:\n        </h1>\n        <div>\n            <label className=\"label-row\">\n                Reporting Date Time Group:\n                <input value={reportingDateInputText} onChange={(event) => {\n                    reportingDateSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div>\n            <label className=\"label-row\">\n                Unit & Call Sign:\n                <input value={callSignInputText} onChange={(event) => {\n                    callSignSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div>\n            <label className=\"label-row\">\n                SP Date Time Group:\n                <input value={spInputText} onChange={(event) => {\n                    spSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n\n        <div>\n            <label className=\"label-row\">\n                Estimated RP Date Time Group:\n                <input value={rpInputText} onChange={(event) => {\n                    rpSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div>\n            <label className=\"label-row\">\n                Command Post Location:\n                <input value={cpInputText} onChange={(event) => {\n                    cpSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div>\n            <label className=\"label-row\">\n                ETA to Continue Operations:\n                <input value={etaInputText} onChange={(event) => {\n                    etaSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div>\n            <label className=\"label-row\">\n                Sensitive Items Status:\n                <input value={sensitiveInputText} onChange={(event) => {\n                    sensitiveSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div>\n            <label className=\"label-row\">\n                One Sentence Narrative:\n                <input value={narInputText} onChange={(event) => {\n                    narSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div>\n            <label className=\"label-row\">\n                Contact Name and Phone #:\n                <input value={contactInputText} onChange={(event) => {\n                    contactSetInputText(event.target.value)\n                }}/>\n            </label>\n        </div>\n        <div className=\"checkButton-styling\">\n            <button type=\"submit\" onClick={()=>\n                // e.preventDefault();\n                alert(reportingDateInputText + callSignInputText + spInputText\n                    + rpInputText + cpInputText + etaInputText + sensitiveInputText + narInputText +\n                    contactInputText)\n            }>submit\n            </button>\n\n        </div>\n    </form>\n    )}","import React, {useState} from \"react\";\nimport './index.css'\nimport './App.css'\n\nexport const Blue7 = () => {\n    const[checkOutReportingDateInputText, checkOutReportingDateSetInputText] = useState<string>(\"\")\n    const[checkOutCallSignInputText, checkOutCallSignSetInputText] = useState<string>(\"\")\n    const[checkOutRpDateInputText, checkOutRpDateSetInputText] = useState<string>(\"\")\n    const[checkOutLocInputText, checkOutLocSetInputText] = useState<string>(\"\")\n    const[accidentInputText, accidentSetInputText] = useState<string>(\"\")\n    const[checkOutEtaInputText, checkOutEtaSetInputText] = useState<string>(\"\")\n    const[checkOutSiInputText, checkOutSiSetInputText] = useState<string>(\"\")\n\n    return (\n        <form>\n            <h1 className=\"body\">\n                Complete Your Blue 7 Below:\n            </h1>\n        <div>\n            <label className=\"label-row\">\n                Reporting Date Time Group:\n                <input value={checkOutReportingDateInputText} onChange={\n                    (event) =>{checkOutReportingDateSetInputText(event.target.value)}}/>\n            </label>\n            <label className=\"label-row\">\n                Unit & Call Sign:\n                <input value={checkOutCallSignInputText} onChange={\n                    (event) =>{checkOutCallSignSetInputText(event.target.value)}}/>\n            </label>\n            <label className=\"label-row\">\n                RP Date Time Group:\n                <input value={checkOutRpDateInputText} onChange={\n                    (event) =>{checkOutRpDateSetInputText(event.target.value)}}/>\n            </label>\n            <label className=\"label-row\">\n                Command Post Location:\n                <input value={checkOutLocInputText} onChange={\n                    (event) =>{checkOutLocSetInputText(event.target.value)}}/>\n            </label>\n            <label className=\"label-row\">\n                Accidents or SIGACTs:\n                <input value={accidentInputText} onChange={\n                    (event) =>{accidentSetInputText(event.target.value)}}/>\n            </label>\n            <label className=\"label-row\">\n                ETA to Continue Operations:\n                <input value={checkOutEtaInputText} onChange={\n                    (event) =>{checkOutEtaSetInputText(event.target.value)}}/>\n            </label>\n            <label className=\"label-row\">\n                Sensitive Items Status:\n                <input value={checkOutSiInputText} onChange={\n                    (event) =>{checkOutSiSetInputText(event.target.value)}}/>\n            </label>\n        </div>\n        <div className=\"checkButton-styling\">\n            <button onClick={() => alert(checkOutReportingDateInputText + checkOutCallSignInputText + checkOutRpDateInputText\n                + checkOutLocInputText + accidentInputText + checkOutEtaInputText + checkOutSiInputText)\n            }>submit</button>\n        </div>\n    </form>\n\n    )}","import React, {useState} from 'react';\nimport Logo from \"./Logo.svg\";\nimport './index.css'\nimport './App.css'\nimport {Blue6} from \"./Blue6\";\nimport {Blue7} from \"./Blue7\";\n\n\n\nexport const App = () => {\n\n//Hook for Blue6/Blue7 Input Selection\nconst [reportSelection, setReportSelection] = useState<number>(0);\n\n    return (\n\n            <div className=\"background-container\">\n                <header className=\"App-header\">\n                    <h1 className=\"body\">\n                        Lancer Brigade Operations Center\n                    </h1>\n                </header>\n                <img src={Logo} className=\"App-logo\" alt=\"logo\"/>\n\n                <div className=\"form-container\">\n                    {reportSelection === 1 && <Blue6/>}\n                    {reportSelection === 2 && <Blue7/>}\n\n                    {/*{reportSelection === 1 ? <Blue6/> :reportSelection ===2 ? <Blue7/> : null}*/}\n                    {/*<>*/}\n                    {/*    <button onClick={() =>setReportSelection(1)}>Initiate Training Event w/ Blue 6</button>*/}\n                    {/*    <button onClick={() => setReportSelection(2)}>Close-Out Training Event w/ Blue 7</button>*/}\n                    {/* </>*/}\n                    {/*<button onClick={() => setReportSelection(0)}>Main Menu</button>*/}\n\n                </div>\n\n                <div className=\"form-container\">{reportSelection === 0 ?\n                    <>\n                        <button onClick={() => setReportSelection(1)}>Initiate Training Event w/ Blue 6</button>\n                        <button onClick={() => setReportSelection(2)}>Close-Out Training Event w/ Blue 7</button>\n                    </>\n                    :\n                    <button onClick={() => setReportSelection(0)} className=\"cancel-button\">cancel</button>}\n                </div>\n\n        </div>\n    )}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}